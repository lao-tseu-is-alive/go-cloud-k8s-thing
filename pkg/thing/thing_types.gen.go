// Package thing provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package thing

import (
	"time"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

const (
	JWTAuthScopes = "JWTAuth.Scopes"
)

// Defines values for ThingStatus.
const (
	ThingStatusAbandonné      ThingStatus = "Abandonné"
	ThingStatusDémoli         ThingStatus = "Démoli"
	ThingStatusEnConstruction ThingStatus = "En Construction"
	ThingStatusPlanifié       ThingStatus = "Planifié"
	ThingStatusUtilisé        ThingStatus = "Utilisé"
)

// Defines values for ThingListStatus.
const (
	ThingListStatusAbandonné      ThingListStatus = "Abandonné"
	ThingListStatusDémoli         ThingListStatus = "Démoli"
	ThingListStatusEnConstruction ThingListStatus = "En Construction"
	ThingListStatusPlanifié       ThingListStatus = "Planifié"
	ThingListStatusUtilisé        ThingListStatus = "Utilisé"
)

// Error defines model for Error.
type Error struct {
	Code    int32  `json:"code"`
	Message string `json:"message"`
}

// Thing defines model for Thing.
type Thing struct {
	BuildAt           *string                 `json:"build_at,omitempty"`
	Comment           *string                 `json:"comment,omitempty"`
	ContainedBy       *string                 `json:"contained_by,omitempty"`
	ContainedByOld    *int32                  `json:"contained_by_old,omitempty"`
	CreateAt          *time.Time              `json:"create_at,omitempty"`
	CreateBy          int32                   `json:"create_by"`
	Deleted           bool                    `json:"deleted"`
	DeletedAt         *time.Time              `json:"deleted_at,omitempty"`
	DeletedBy         *int32                  `json:"deleted_by,omitempty"`
	Description       *string                 `json:"description,omitempty"`
	ExternalId        *int32                  `json:"external_id,omitempty"`
	ExternalRef       *string                 `json:"external_ref,omitempty"`
	Id                openapi_types.UUID      `json:"id"`
	Inactivated       bool                    `json:"inactivated"`
	InactivatedBy     *int32                  `json:"inactivated_by,omitempty"`
	InactivatedReason *string                 `json:"inactivated_reason,omitempty"`
	InactivatedTime   *time.Time              `json:"inactivated_time,omitempty"`
	LastModifiedAt    *time.Time              `json:"last_modified_at,omitempty"`
	LastModifiedBy    *int32                  `json:"last_modified_by,omitempty"`
	ManagedBy         *int32                  `json:"managed_by,omitempty"`
	MoreData          *map[string]interface{} `json:"more_data,omitempty"`
	Name              string                  `json:"name"`
	PosX              float64                 `json:"pos_x"`
	PosY              float64                 `json:"pos_y"`
	Status            *ThingStatus            `json:"status,omitempty"`
	TypeId            int32                   `json:"type_id"`
	Validated         bool                    `json:"validated"`
	ValidatedBy       *int32                  `json:"validated_by,omitempty"`
	ValidatedTime     *time.Time              `json:"validated_time,omitempty"`
}

// ThingStatus defines model for Thing.Status.
type ThingStatus string

// ThingList defines model for ThingList.
type ThingList struct {
	CreatedAt   time.Time          `json:"created_at"`
	CreatedBy   int32              `json:"created_by"`
	Description *string            `json:"description,omitempty"`
	ExternalId  int32              `json:"external_id"`
	Id          openapi_types.UUID `json:"id"`
	Inactivated bool               `json:"inactivated"`
	Name        string             `json:"name"`
	PosX        *float64           `json:"pos_x,omitempty"`
	PosY        *float64           `json:"pos_y,omitempty"`
	Status      *ThingListStatus   `json:"status,omitempty"`
	TypeId      int32              `json:"type_id"`
	Validated   bool               `json:"validated"`
}

// ThingListStatus defines model for ThingList.Status.
type ThingListStatus string

// TypeThing defines model for TypeThing.
type TypeThing struct {
	Comment           *string      `json:"comment,omitempty"`
	CreateAt          *time.Time   `json:"create_at,omitempty"`
	CreateBy          *int32       `json:"create_by,omitempty"`
	Deleted           bool         `json:"deleted"`
	DeletedAt         *time.Time   `json:"deleted_at,omitempty"`
	DeletedBy         *int32       `json:"deleted_by,omitempty"`
	Description       *string      `json:"description,omitempty"`
	ExternalId        *int32       `json:"external_id,omitempty"`
	GeometryType      *string      `json:"geometry_type,omitempty"`
	Id                int32        `json:"id"`
	Inactivated       bool         `json:"inactivated"`
	InactivatedBy     *int32       `json:"inactivated_by,omitempty"`
	InactivatedReason *string      `json:"inactivated_reason,omitempty"`
	InactivatedTime   *time.Time   `json:"inactivated_time,omitempty"`
	LastModifiedAt    *time.Time   `json:"last_modified_at,omitempty"`
	LastModifiedBy    *int32       `json:"last_modified_by,omitempty"`
	ManagedBy         *int32       `json:"managed_by,omitempty"`
	MoreDataSchema    *interface{} `json:"more_data_schema,omitempty"`
	Name              string       `json:"name"`
	TableName         *string      `json:"table_name,omitempty"`
}

// TypeThingList defines model for TypeThingList.
type TypeThingList struct {
	Id          int32  `json:"id"`
	Inactivated bool   `json:"inactivated"`
	Name        string `json:"name"`
}

// ListParams defines parameters for List.
type ListParams struct {
	// TypeThing id to filter by the things to return
	Type *int32 `form:"type,omitempty" json:"type,omitempty"`

	// id of the creator to filter by the things to return
	CreatedBy *int32 `form:"created_by,omitempty" json:"created_by,omitempty"`

	// inactivated flag to filter the things to return
	Inactivated *bool `form:"inactivated,omitempty" json:"inactivated,omitempty"`

	// validation flag to filter the things to return
	Validated *bool `form:"validated,omitempty" json:"validated,omitempty"`

	// maximum number of results to return
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// offset rows to skip before returning rows
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`
}

// CreateJSONBody defines parameters for Create.
type CreateJSONBody = Thing

// ListByExternalIdParams defines parameters for ListByExternalId.
type ListByExternalIdParams struct {
	// maximum number of results to return
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// offset rows to skip before returning rows
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`
}

// SearchParams defines parameters for Search.
type SearchParams struct {
	// text keywords to filter the things to return
	Keywords *string `form:"keywords,omitempty" json:"keywords,omitempty"`

	// TypeThing id to filter by the things to return
	Type *int32 `form:"type,omitempty" json:"type,omitempty"`

	// id of the creator to filter by the things to return
	CreatedBy *int32 `form:"created_by,omitempty" json:"created_by,omitempty"`

	// inactivated flag to filter the things to return
	Inactivated *bool `form:"inactivated,omitempty" json:"inactivated,omitempty"`

	// validation flag to filter the things to return
	Validated *bool `form:"validated,omitempty" json:"validated,omitempty"`

	// maximum number of results to return
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// offset rows to skip before returning rows
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`
}

// TypeThingListParams defines parameters for TypeThingList.
type TypeThingListParams struct {
	// maximum number of results to return
	Limit *int32 `form:"limit,omitempty" json:"limit,omitempty"`

	// offset rows to skip before returning rows
	Offset *int32 `form:"offset,omitempty" json:"offset,omitempty"`
}

// TypeThingCreateJSONBody defines parameters for TypeThingCreate.
type TypeThingCreateJSONBody = TypeThing

// CreateJSONRequestBody defines body for Create for application/json ContentType.
type CreateJSONRequestBody = CreateJSONBody

// TypeThingCreateJSONRequestBody defines body for TypeThingCreate for application/json ContentType.
type TypeThingCreateJSONRequestBody = TypeThingCreateJSONBody
