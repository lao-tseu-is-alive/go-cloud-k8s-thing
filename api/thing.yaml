---
openapi: 3.0.3
info:
  title: Thing microservice written in Golang
  description: OpenApi Specification for an API to manage Thing
  contact:
    name: go-cloud-k8s-thing API Team
    url: https://goeland.io
    email: go-cloud-k8s-thing@goeland.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.3
servers:
- url: https://api.goeland.io/thing
paths:
  /thing:
    get:
      summary: List returns a list of thing
      description: Returns the thing in an array
      operationId: List
      parameters:
      - name: limit
        in: query
        description: maximum number of results to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: get List of thing response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThingList'
        "401":
          description: Access token is missing or invalid
        default:
          description: unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - JWTAuth: []
    post:
      summary: Create will create a new thing
      description: Creates a new thing
      operationId: Create
      requestBody:
        description: Thing to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Thing'
        required: true
      responses:
        "201":
          description: Thing creation response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thing'
        "401":
          description: Access token is missing or invalid
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - JWTAuth: []
  /thingByType/{typeId}:
    get:
      summary: ListByType returns a list of thing
      description: Returns the things in an array
      operationId: ListByType
      parameters:
      - name: typeId
        in: path
        description: typeId of the things needed
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      - name: limit
        in: query
        description: maximum number of results to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: get List of things response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThingList'
        "401":
          description: Access token is missing or invalid
        default:
          description: unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - JWTAuth: []
  /thing/{thingId}:
    get:
      summary: Get will retrieve in backend all information about a specific thingId
      description: Retrieve a specific thing
      operationId: Get
      parameters:
      - name: thingId
        in: path
        description: Id of the thing
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: get thing successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thing'
        "401":
          description: Access token is missing or invalid
        "404":
          description: get things response when thingId was not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - JWTAuth: []
    put:
      summary: Update allows to modify information about a specific thingId
      description: Updates the status of a thing
      operationId: Update
      parameters:
      - name: thingId
        in: path
        description: Id of the thing
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: informations related to the thing
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Thing'
      responses:
        "200":
          description: put things successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thing'
        "401":
          description: Access token is missing or invalid
        "404":
          description: put things response when thingId was not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - JWTAuth: []
    delete:
      summary: Delete allows to delete a specific thingId
      description: delete a thing
      operationId: Delete
      parameters:
      - name: thingId
        in: path
        description: Id of the thing
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: delete thing successful no content
        "401":
          description: Access token is missing or invalid
        "404":
          description: delete thing response when thingId was not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - JWTAuth: []
  /types:
    get:
      summary: TypeThingList returns a list of types
      description: Returns the types in an array
      operationId: TypeThingList
      parameters:
      - name: limit
        in: query
        description: maximum number of results to return
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: get List of types response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TypeThingList'
        "401":
          description: Access token is missing or invalid
        default:
          description: unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - JWTAuth: []
    post:
      summary: TypeThingCreate will create a new group
      description: Creates a new group
      operationId: TypeThingCreate
      requestBody:
        description: TypeThing to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeThing'
        required: true
      responses:
        "201":
          description: TypeThing creation response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeThing'
        "401":
          description: Access token is missing or invalid
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - JWTAuth: []
  /types/{typeThingId}:
    get:
      summary: TypeThingGet will retrieve in backend all information about a specific typeThingId
      description: Retrieve a specific typeThing
      operationId: TypeThingGet
      parameters:
      - name: typeThingId
        in: path
        description: Id of the typeThing
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: get typeThing successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeThing'
        "401":
          description: Access token is missing or invalid
        "404":
          description: get typeThing response when typeThingId was not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - JWTAuth: []
    put:
      summary: TypeThingUpdate allows to modify information about a specific typeThingId
      description: Updates the informations related to a typeThing
      operationId: TypeThingUpdate
      parameters:
      - name: typeThingId
        in: path
        description: Id of the typeThing
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        description: informations related to the typeThing
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeThing'
      responses:
        "200":
          description: put typeThing successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeThing'
        "401":
          description: Access token is missing or invalid
        "404":
          description: put typeThing response when userId was not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - JWTAuth: []
    delete:
      summary: TypeThingDelete allows to delete a specific typeThingId
      description: delete a typeThing
      operationId: TypeThingDelete
      parameters:
      - name: typeThingId
        in: path
        description: Id of the typeThing
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "204":
          description: delete typeThing successful no content
        "401":
          description: Access token is missing or invalid
        "404":
          description: delete typeThing response when typeThingId was not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
      - JWTAuth: []
components:
  schemas:
    Thing:
      required:
      - create_time
      - creator
      - id
      - is_active
      - name
      - type_thing_id
      type: object
      properties:
        id:
          type: integer
          format: int32
        type_thing_id:
          type: integer
          format: int32
        name:
          minLength: 2
          type: string
        description:
          minLength: 2
          type: string
        external_id:
          type: integer
          format: int32
        is_active:
          type: boolean
          default: true
        inactivation_time:
          type: string
          format: date-time
        inactivation_reason:
          type: string
        comment:
          type: string
        is_validated:
          type: boolean
          default: false
        id_validator:
          type: integer
          format: int32
        create_time:
          type: string
          format: date-time
        creator:
          type: integer
          format: int32
        last_modification_time:
          type: string
          format: date-time
        last_modification_user:
          type: integer
          format: int32
        is_deleted:
          type: boolean
          default: false
        deleted_time:
          type: string
          format: date-time
        deleted_by_user:
          type: integer
          format: int32

    ThingList:
      required:
      - create_time
      - creator
      - id
      - is_active
      - name
      - type_thing_id
      type: object
      properties:
        id:
          type: integer
          format: int32
        type_thing_id:
          type: integer
          format: int32
        name:
          minLength: 2
          type: string
        description:
          minLength: 2
          type: string
        external_id:
          type: integer
          format: int32
        is_active:
          type: boolean
          default: true
        creator:
          type: integer
          format: int32
        create_time:
          type: string
          format: date-time
    TypeThing:
      required:
      - create_time
      - creator
      - id
      - is_active
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          minLength: 2
          type: string
        create_time:
          type: string
          format: date-time
        creator:
          type: integer
          format: int32
        last_modification_time:
          type: string
          format: date-time
        last_modification_user:
          type: integer
          format: int32
        is_active:
          type: boolean
          default: true
        inactivation_time:
          type: string
          format: date-time
        inactivation_reason:
          type: string
        comment:
          type: string
    TypeThingList:
      required:
      - id
      - is_active
      - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          minLength: 2
          type: string
        is_active:
          type: boolean
          default: true
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    JsonWebToken:
      required:
      - token
      type: object
      properties:
        token:
          type: string
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
