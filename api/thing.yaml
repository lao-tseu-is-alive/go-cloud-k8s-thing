---
openapi: 3.0.3
info:
  title: Thing microservice written in Golang
  description: OpenApi Specification for an API to manage Thing
  contact:
    name: go-cloud-k8s-thing API Team
    url: https://goeland.io
    email: go-cloud-k8s-thing@goeland.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.5
servers:
  - url: https://api.goeland.io/
paths:
  /thing:
    get:
      summary: List returns a list of thing
      description: Returns the thing in an array
      operationId: List
      parameters:
        - name: type
          in: query
          description: TypeThing id to filter by the things to return
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: created_by
          in: query
          description: id of the creator to filter by the things to return
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: inactivated
          in: query
          description: inactivated flag to filter the things to return
          required: false
          style: form
          explode: true
          schema:
            type: boolean
        - name: validated
          in: query
          description: validation flag to filter the things to return
          required: false
          style: form
          explode: true
          schema:
            type: boolean
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: offset rows to skip before returning rows
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: get List of thing response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThingList'
        "401":
          description: Access token is missing or invalid
        default:
          description: unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - JWTAuth: []
    post:
      summary: Create will create a new thing
      description: Creates a new thing
      operationId: Create
      requestBody:
        description: Thing to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Thing'
        required: true
      responses:
        "201":
          description: Thing creation response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thing'
        "401":
          description: Access token is missing or invalid
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - JWTAuth: []
  /thing/by-external-id/{externalId}:
    get:
      summary: ListByExternalId returns a list of thing filtered by externalId
      description: Returns the things in an array
      operationId: ListByExternalId
      parameters:
        - name: externalId
          in: path
          description: externalId of the things needed
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: offset rows to skip before returning rows
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: get List of things response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThingList'
        "401":
          description: Access token is missing or invalid
        default:
          description: unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - JWTAuth: [ ]
  /thing/search:
    get:
      summary: Search returns a list of thing based on search criterias
      description: Returns the thing in an array
      operationId: Search
      parameters:
        - name: keywords
          in: query
          description: text keywords to filter the things to return
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: type
          in: query
          description: TypeThing id to filter by the things to return
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: created_by
          in: query
          description: id of the creator to filter by the things to return
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: inactivated
          in: query
          description: inactivated flag to filter the things to return
          required: false
          style: form
          explode: true
          schema:
            type: boolean
        - name: validated
          in: query
          description: validation flag to filter the things to return
          required: false
          style: form
          explode: true
          schema:
            type: boolean
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: offset rows to skip before returning rows
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: get List of thing response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ThingList'
        "401":
          description: Access token is missing or invalid
        default:
          description: unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - JWTAuth: []
        
  /thing/count:
    get:
      summary: Count returns the number of thing based on search criterias
      description: Returns the number of things found after filtering with passed criterias
      operationId: Count
      parameters:
        - name: keywords
          in: query
          description: text keywords to filter the things to return
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: type
          in: query
          description: TypeThing id to filter by the things to return
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: created_by
          in: query
          description: id of the creator to filter by the things to return
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: inactivated
          in: query
          description: inactivated flag to filter the things to return
          required: false
          style: form
          explode: true
          schema:
            type: boolean
        - name: validated
          in: query
          description: validation flag to filter the things to return
          required: false
          style: form
          explode: true
          schema:
            type: boolean
      responses:
        "200":
          description: get List of thing response
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "401":
          description: Access token is missing or invalid
        default:
          description: unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - JWTAuth: []
    
  /thing/{thingId}:
    get:
      summary: Get will retrieve in backend all information about a specific thingId
      description: Retrieve a specific thing
      operationId: Get
      parameters:
        - name: thingId
          in: path
          description: Id of the thing
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: get thing successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thing'
        "401":
          description: Access token is missing or invalid
        "404":
          description: get things response when thingId was not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - JWTAuth: []
    put:
      summary: Update allows to modify information about a specific thingId
      description: Updates the status of a thing
      operationId: Update
      parameters:
        - name: thingId
          in: path
          description: Id of the thing
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
      requestBody:
        description: informations related to the thing
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Thing'
      responses:
        "200":
          description: put things successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thing'
        "401":
          description: Access token is missing or invalid
        "404":
          description: put things response when thingId was not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - JWTAuth: []
    delete:
      summary: Delete allows to delete a specific thingId
      description: delete a thing
      operationId: Delete
      parameters:
        - name: thingId
          in: path
          description: Id of the thing
          required: true
          style: simple
          explode: false
          schema:
            type: string
            format: uuid
      responses:
        "204":
          description: delete thing successful no content
        "401":
          description: Access token is missing or invalid
        "404":
          description: delete thing response when thingId was not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - JWTAuth: []
  /types:
    get:
      summary: TypeThingList returns a list of types
      description: Returns the types in an array
      operationId: TypeThingList
      parameters:
        - name: keywords
          in: query
          description: text keywords to filter the things to return
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: created_by
          in: query
          description: id of the creator to filter by the things to return
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: external_id
          in: query
          description: id of the external id to filter by the things to return
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: inactivated
          in: query
          description: inactivated flag to filter the things to return
          required: false
          style: form
          explode: true
          schema:
            type: boolean
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: offset rows to skip before returning rows
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: get List of types response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TypeThingList'
        "401":
          description: Access token is missing or invalid
        default:
          description: unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - JWTAuth: []
    post:
      summary: TypeThingCreate will create a new group
      description: Creates a new group
      operationId: TypeThingCreate
      requestBody:
        description: TypeThing to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TypeThing'
        required: true
      responses:
        "201":
          description: TypeThing creation response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeThing'
        "401":
          description: Access token is missing or invalid
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - JWTAuth: []
  /types/{typeThingId}:
    get:
      summary: TypeThingGet will retrieve in backend all information about a specific typeThingId
      description: Retrieve a specific typeThing
      operationId: TypeThingGet
      parameters:
        - name: typeThingId
          in: path
          description: Id of the typeThing
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: get typeThing successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeThing'
        "401":
          description: Access token is missing or invalid
        "404":
          description: get typeThing response when typeThingId was not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - JWTAuth: []
    put:
      summary: TypeThingUpdate allows to modify information about a specific typeThingId
      description: Updates the information related to a typeThing
      operationId: TypeThingUpdate
      parameters:
        - name: typeThingId
          in: path
          description: Id of the typeThing
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      requestBody:
        description: informations related to the typeThing
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TypeThing'
      responses:
        "200":
          description: put typeThing successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TypeThing'
        "401":
          description: Access token is missing or invalid
        "404":
          description: put typeThing response when userId was not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - JWTAuth: []
    delete:
      summary: TypeThingDelete allows to delete a specific typeThingId
      description: delete a typeThing
      operationId: TypeThingDelete
      parameters:
        - name: typeThingId
          in: path
          description: Id of the typeThing
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: delete typeThing successful no content
        "401":
          description: Access token is missing or invalid
        "404":
          description: delete typeThing response when typeThingId was not found
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - JWTAuth: []
  /types/count:
    get:
      summary: Count returns the number of TypeThing based on search criterias
      description: Returns the number of TypeThings found after filtering with passed criterias
      operationId: TypeThingCount
      parameters:
        - name: keywords
          in: query
          description: text keywords to filter the TypeThing count
          required: false
          style: form
          explode: true
          schema:
            type: string
        - name: created_by
          in: query
          description: id of the creator to filter the TypeThing count
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int32
        - name: inactivated
          in: query
          description: inactivated flag to filter the TypeThing count to return
          required: false
          style: form
          explode: true
          schema:
            type: boolean
      responses:
        "200":
          description: get Number of TypeThing response
          content:
            application/json:
              schema:
                type: integer
                format: int32
        "401":
          description: Access token is missing or invalid
        default:
          description: unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - JWTAuth: []
components:
  schemas:
    Thing:
      required:
        - id
        - type_id
        - name
        - inactivated
        - create_by
        - deleted
        - pos_x
        - pos_y
      type: object
      properties:
        id:
          type: string
          format: uuid
        type_id:
          type: integer
          format: int32
        name:
          format: text
          type: string
        description:
          format: text
          type: string
        comment:
          format: text
          type: string
        external_id:
          format: int32
          type: integer
        external_ref:
          format: text
          type: string
        build_at:
          format: date,
          type: string
        status:
          $ref: '#/components/schemas/ThingStatus'
        contained_by:
          format: uuid,
          type: string
        contained_by_old:
          format: int32
          type: integer
        inactivated:
          default: false,
          type: boolean
        inactivated_time:
          format: date-time
          type: string
        inactivated_by:
          format: int32
          type: integer
        inactivated_reason:
          format: text
          type: string
        validated:
          default: false,
          type: boolean
        validated_time:
          format: date-time
          type: string
        validated_by:
          format: int32
          type: integer
        managed_by:
          format: int32
          type: integer
        create_at:
          format: date-time
          type: string
        create_by:
          format: int32
          type: integer
        last_modified_at:
          format: date-time
          type: string
        last_modified_by:
          format: int32
          type: integer
        deleted:
          default: false,
          type: boolean
        deleted_at:
          format: date-time
          type: string
        deleted_by:
          format: int32
          type: integer
        more_data:
          type: object
        pos_x:
          type: number
          format: double
        pos_y:
          type: number
          format: double
    ThingList:
      required:
        - id
        - type_id
        - name
        - inactivated
        - create_by
        - deleted
        - pos_x
        - pos_y
      type: object
      properties:
        id:
          type: string
          format: uuid
        type_id:
          type: integer
          format: int32
        name:
          minLength: 2
          type: string
        description:
          minLength: 2
          type: string
        external_id:
          type: integer
          format: int32
        inactivated:
          type: boolean
          default: false
        validated:
          type: boolean
          default: false
        status:
          $ref: '#/components/schemas/ThingStatus'
        created_by:
          type: integer
          format: int32
        created_at:
          type: string
          format: date-time
        pos_x:
          type: number
          format: double
        pos_y:
          type: number
          format: double
    TypeThing:
      required:
        - id
        - name
        - inactivated
        - deleted
        - created_by
      type: object
      properties:
        id:
          format: int32
          type: integer
        name:
          format: text
          type: string
        description:
          format: text
          type: string
        comment:
          format: text
          type: string
        external_id:
          format: int32
          type: integer
        table_name:
          format: text
          type: string
        geometry_type:
          format: text,
          type: string
        inactivated:
          default: false,
          type: boolean
        inactivated_time:
          format: date-time
          type: string
        inactivated_by:
          format: int32
          type: integer
        inactivated_reason:
          format: text
          type: string
        managed_by:
          format: int32
          type: integer
        created_at:
          format: date-time
          type: string
        created_by:
          format: int32
          type: integer
        last_modified_at:
          format: date-time
          type: string
        last_modified_by:
          format: int32
          type: integer
        deleted:
          default: false,
          type: boolean
        deleted_at:
          format: date-time
          type: string
        deleted_by:
          format: int32
          type: integer
        more_data_schema:
          format: object
    TypeThingList:
      required:
        - id
        - name
        - inactivated
        - created_at
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          minLength: 2
          type: string
        external_id:
          format: int32
          type: integer
        created_at:
          format: date-time
          type: string
        table_name:
          format: text
          type: string
        geometry_type:
          format: text,
          type: string
        inactivated:
          type: boolean
          default: false
    ThingStatus:
      type: string
      enum:
            - "Planifié"
            - "En Construction"
            - "Utilisé"
            - "Abandonné"
            - "Démoli"
      format: "public.thing_status_type"
    Error:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    JsonWebToken:
      required:
        - token
      type: object
      properties:
        token:
          type: string
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
